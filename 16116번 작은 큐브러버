#include <iostream>
using namespace std;
/*
enum CubeNum {
	W = 0,
	B,
	O,
	G,
	R,
	Y
};*/
int char_to_int(char input) {
	if (input == 'W') {
		return 0;
	}
	else if (input == 'B') {
		return 1;
	}
	else if (input == 'O') {
		return 2;
	}
	else if (input == 'G') {
		return 3;
	}
	else if (input == 'R') {
		return 4;
	}
	else if (input == 'Y') {
		return 5;
	}
}
int main() {
	//enum CubeNum input;
	char temp;
	int connect[6][6];
	int top_l[6] = { 0 };
	int top_r[6] = { 0 };
	int bot_l[6] = { 0 };
	int bot_r[6] = { 0 };
	int disconnect[6];
	for (int i = 0; i < 6; i++) {
		for (int j = 0; j < 6; j++) {
			connect[i][j] = 0;
		}
		disconnect[i] = -1;
	}
	char in[8][3];
	for (int i = 0; i < 8; i++) {
		for (int j = 0; j < 3; j++) {
			cin >> in[i][j];
		}
		if (in[i][0] == in[i][1] || in[i][2] == in[i][1] || in[i][0] == in[i][2]) {
			cout << "NO";
			return 0;
		}

		connect[char_to_int(in[i][0])][char_to_int(in[i][1])] = 1;
		connect[char_to_int(in[i][0])][char_to_int(in[i][2])] = 1;
		connect[char_to_int(in[i][1])][char_to_int(in[i][0])] = 1;
		connect[char_to_int(in[i][1])][char_to_int(in[i][2])] = 1;
		connect[char_to_int(in[i][2])][char_to_int(in[i][0])] = 1;
		connect[char_to_int(in[i][2])][char_to_int(in[i][1])] = 1;
	}

	for (int i = 0; i < 6; i++) {
		for (int j = 0; j < 6; j++) {
			if (connect[i][j] == 0 && i != j) {
				if (disconnect[i] != -1) {
					cout << "NO";
					return 0;
				}
				else {
					disconnect[i] = j;
				}
			}
		}
	}

	for (int i = 0; i < 6; i++) {
		if (disconnect[i] == -1) {
			cout << "NO";
			return 0;
		}
	}

	int top = 0;
	int bot = disconnect[0];
	int top_c, bot_c;
	for (int i = 0; i < 8; i++) {
		top_c = 0;
		bot_c = 0;
		for (int j = 0; j < 3; j++) {
			if (char_to_int(in[i][j]) == top) {
				top_c = 1;
			}
			if (char_to_int(in[i][j]) == bot) {
				bot_c = 1;
			}
		}
		if ((top_c == 1 && bot_c == 1) || (top_c == 0 && bot_c == 0)) {
			cout << "NO";
			return 0;
		}
		if (top_c == 1) {
			if (char_to_int(in[i][1]) == top) {
				temp = in[i][0];
				in[i][0] = in[i][1];
				in[i][1] = in[i][2];
				in[i][2] = temp;
			}
			if (char_to_int(in[i][2]) == top) {
				temp = in[i][2];
				in[i][2] = in[i][1];
				in[i][1] = in[i][0];
				in[i][0] = temp;
			}
			top_l[char_to_int(in[i][1])]++;
			top_r[char_to_int(in[i][2])]++;
		}
		if (bot_c == 1) {
			if (char_to_int(in[i][1]) == bot) {
				temp = in[i][0];
				in[i][0] = in[i][1];
				in[i][1] = in[i][2];
				in[i][2] = temp;
			}
			if (char_to_int(in[i][2]) == bot) {
				temp = in[i][2];
				in[i][2] = in[i][1];
				in[i][1] = in[i][0];
				in[i][0] = temp;
			}
			bot_l[char_to_int(in[i][1])]++;
			bot_r[char_to_int(in[i][2])]++;

		}
	}
	for (int i = 0; i < 6; i++) {
		if (bot_l[i] > 1 || bot_r[i] > 1 || top_l[i] > 1 || top_r[i] > 1 || (bot_l[i] != bot_r[i]) || (top_l[i] != top_r[i])) {
			cout << "NO";
			return 0;
		}
	}
	cout << "YES";

	return 0;
}
