#include <iostream>
#include <vector>
using namespace std;

int arr[1000][1000];
int dp[1000][1000];

int min3(int a, int b, int c) {
	if (a <= b && a <= c) {
		return a;
	}
	else if (b <= a && b <= c) {
		return b;
	}
	else {
		return c;
	}
}
int main() {
	int n, m, max = 0;
	char input;
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cin >> input;
			arr[i][j] = input - '0';
		}
	}

	for (int i = 0; i < n; i++) {
		dp[i][0] = arr[i][0];
	}
	for (int i = 0; i < m; i++) {
		dp[0][i] = arr[0][i];
	}


	for (int j = 1; j < m; j++) {
		for (int i = 1; i < n; i++) {
			if (j - i < 1) { //조건추가
				break;
			}
			else {
				if (arr[i][j - i] == 0) {
					dp[i][j - i] = 0;
				}
				else {
					dp[i][j - i] = min3(dp[i - 1][j - i], dp[i - 1][j - i - 1], dp[i][j - i - 1]) + 1;
				}
			}

		}
	}
	
	for (int i = 1; i < n; i++) {
		for (int j = 0; j < m - 1; j++) {
			if (i + j >= n || m - 1 - j < 0) {
				break;
			}
			else {
				if (arr[i + j][m - 1 - j] == 0) {
					dp[i + j][m - 1 - j] = 0;
				}
				else {
					dp[i + j][m - 1 - j] = min3(dp[i + j - 1][m - 1 - j], dp[i + j - 1][m - 2 - j], dp[i + j][m - 2 - j]) + 1;
				}
			}
		}
	}
	
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (max < dp[i][j]) {
				max = dp[i][j];
			}
		}
	}
	cout << max*max;
	return 0;
}
